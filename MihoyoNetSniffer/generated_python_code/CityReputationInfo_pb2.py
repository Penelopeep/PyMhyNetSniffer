# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: CityReputationInfo.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import CityReputationHuntInfo_pb2 as CityReputationHuntInfo__pb2
import CityReputationExploreInfo_pb2 as CityReputationExploreInfo__pb2
import CityReputationQuestInfo_pb2 as CityReputationQuestInfo__pb2
import CityReputationRequestInfo_pb2 as CityReputationRequestInfo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x43ityReputationInfo.proto\x1a\x1c\x43ityReputationHuntInfo.proto\x1a\x1f\x43ityReputationExploreInfo.proto\x1a\x1d\x43ityReputationQuestInfo.proto\x1a\x1f\x43ityReputationRequestInfo.proto\"\xc0\x02\n\x12\x43ityReputationInfo\x12\x1d\n\x15totalAcceptRequestNum\x18\x0b \x01(\r\x12)\n\x08huntInfo\x18\t \x01(\x0b\x32\x17.CityReputationHuntInfo\x12\x0b\n\x03\x65xp\x18\x08 \x01(\r\x12/\n\x0b\x65xploreInfo\x18\x05 \x01(\x0b\x32\x1a.CityReputationExploreInfo\x12\r\n\x05level\x18\r \x01(\r\x12\x1c\n\x14takenLevelRewardList\x18\x04 \x03(\r\x12+\n\tquestInfo\x18\x07 \x01(\x0b\x32\x18.CityReputationQuestInfo\x12/\n\x0brequestInfo\x18\x02 \x01(\x0b\x32\x1a.CityReputationRequestInfo\x12\x17\n\x0fnextRefreshTime\x18\x0e \x01(\rB\x1b\n\x19\x65mu.grasscutter.net.protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'CityReputationInfo_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031emu.grasscutter.net.proto'
  _globals['_CITYREPUTATIONINFO']._serialized_start=156
  _globals['_CITYREPUTATIONINFO']._serialized_end=476
# @@protoc_insertion_point(module_scope)
