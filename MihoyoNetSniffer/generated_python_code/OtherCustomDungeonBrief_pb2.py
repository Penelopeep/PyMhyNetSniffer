# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: OtherCustomDungeonBrief.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import CustomDungeonAbstract_pb2 as CustomDungeonAbstract__pb2
import CustomDungeonSocial_pb2 as CustomDungeonSocial__pb2
import CustomDungeonSetting_pb2 as CustomDungeonSetting__pb2
import SocialDetail_pb2 as SocialDetail__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1dOtherCustomDungeonBrief.proto\x1a\x1b\x43ustomDungeonAbstract.proto\x1a\x19\x43ustomDungeonSocial.proto\x1a\x1a\x43ustomDungeonSetting.proto\x1a\x12SocialDetail.proto\"\xd0\x02\n\x17OtherCustomDungeonBrief\x12\x13\n\x0b\x64ungeonGuid\x18\x02 \x01(\x04\x12(\n\x08\x61\x62stract\x18\x0f \x01(\x0b\x32\x16.CustomDungeonAbstract\x12$\n\x06social\x18\x0b \x01(\x0b\x32\x14.CustomDungeonSocial\x12\x15\n\risPsnPlatform\x18\n \x01(\x08\x12\x11\n\tdungeonId\x18\x05 \x01(\r\x12\x1a\n\x12isAdventureDungeon\x18\x0c \x01(\x08\x12\x0f\n\x07tagList\x18\x06 \x03(\r\x12&\n\x07setting\x18\x04 \x01(\x0b\x32\x15.CustomDungeonSetting\x12\x19\n\x11\x62\x61ttleMinCostTime\x18\x07 \x01(\r\x12$\n\rcreatorDetail\x18\x08 \x01(\x0b\x32\r.SocialDetail\x12\x10\n\x08isStored\x18\x03 \x01(\x08\x42\x1b\n\x19\x65mu.grasscutter.net.protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'OtherCustomDungeonBrief_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031emu.grasscutter.net.proto'
  _globals['_OTHERCUSTOMDUNGEONBRIEF']._serialized_start=138
  _globals['_OTHERCUSTOMDUNGEONBRIEF']._serialized_end=474
# @@protoc_insertion_point(module_scope)
