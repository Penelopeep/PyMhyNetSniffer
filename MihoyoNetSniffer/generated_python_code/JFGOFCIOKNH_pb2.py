# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: JFGOFCIOKNH.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import PAHEIEEOIED_pb2 as PAHEIEEOIED__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11JFGOFCIOKNH.proto\x1a\x11PAHEIEEOIED.proto\"\xed\x02\n\x0bJFGOFCIOKNH\x12\x13\n\x0b\x46HDDGGPLFPD\x18\x08 \x01(\x02\x12\x32\n\x0bMKHMMEIPADF\x18\x06 \x03(\x0b\x32\x1d.JFGOFCIOKNH.MKHMMEIPADFEntry\x12\x13\n\x0bKJJGPALBKOB\x18\x01 \x01(\r\x12\x13\n\x0b\x44\x43KCABDEPFP\x18\x02 \x01(\x02\x12\x13\n\x0bOALLIFFNAKN\x18\x05 \x01(\r\x12\x18\n\x10\x61ttack_target_id\x18\x0e \x01(\r\x12\x13\n\x0bMKHJHACMPLF\x18\r \x01(\x02\x12\x11\n\tentity_id\x18\x0f \x01(\r\x12\x13\n\x0bIBJGGELGJGJ\x18\x03 \x01(\r\x12\x13\n\x0b\x42\x46\x45JHJADGKJ\x18\n \x01(\x02\x12\x13\n\x0b\x45PPLJDKOOGO\x18\x07 \x01(\r\x12!\n\x0bIMOFBLMDLIM\x18\x0b \x03(\x0b\x32\x0c.PAHEIEEOIED\x1a\x32\n\x10MKHMMEIPADFEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r:\x02\x38\x01\x42\x13\n\x11layla.sleep.protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'JFGOFCIOKNH_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\021layla.sleep.proto'
  _JFGOFCIOKNH_MKHMMEIPADFENTRY._options = None
  _JFGOFCIOKNH_MKHMMEIPADFENTRY._serialized_options = b'8\001'
  _globals['_JFGOFCIOKNH']._serialized_start=41
  _globals['_JFGOFCIOKNH']._serialized_end=406
  _globals['_JFGOFCIOKNH_MKHMMEIPADFENTRY']._serialized_start=356
  _globals['_JFGOFCIOKNH_MKHMMEIPADFENTRY']._serialized_end=406
# @@protoc_insertion_point(module_scope)
