# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: GCGMessage.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import TokenChange_pb2 as TokenChange__pb2
import PhaseChange_pb2 as PhaseChange__pb2
import AddCards_pb2 as AddCards__pb2
import RemoveCards_pb2 as RemoveCards__pb2
import SelectOnStage_pb2 as SelectOnStage__pb2
import DiceRoll_pb2 as DiceRoll__pb2
import DiceReroll_pb2 as DiceReroll__pb2
import Pass_pb2 as Pass__pb2
import CharDie_pb2 as CharDie__pb2
import SkillResult_pb2 as SkillResult__pb2
import CostDice_pb2 as CostDice__pb2
import AddDice_pb2 as AddDice__pb2
import MoveCard_pb2 as MoveCard__pb2
import UseSkill_pb2 as UseSkill__pb2
import NewCard_pb2 as NewCard__pb2
import UpdateController_pb2 as UpdateController__pb2
import ModifyAdd_pb2 as ModifyAdd__pb2
import ModifyRemove_pb2 as ModifyRemove__pb2
import UseSkillEnd_pb2 as UseSkillEnd__pb2
import DuelDataChange_pb2 as DuelDataChange__pb2
import ClientPerform_pb2 as ClientPerform__pb2
import GameOver_pb2 as GameOver__pb2
import OpTimer_pb2 as OpTimer__pb2
import WaitingListChange_pb2 as WaitingListChange__pb2
import CardUpdate_pb2 as CardUpdate__pb2
import SelectOnStageByEffect_pb2 as SelectOnStageByEffect__pb2
import CostRevise_pb2 as CostRevise__pb2
import PhaseContinue_pb2 as PhaseContinue__pb2
import PveIntentionInfo_pb2 as PveIntentionInfo__pb2
import PveIntentionChange_pb2 as PveIntentionChange__pb2
import SkillLimitsChange_pb2 as SkillLimitsChange__pb2
import NoDamageSkillResult_pb2 as NoDamageSkillResult__pb2
import ReactionBegin_pb2 as ReactionBegin__pb2
import ReactionEnd_pb2 as ReactionEnd__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10GCGMessage.proto\x1a\x11TokenChange.proto\x1a\x11PhaseChange.proto\x1a\x0e\x41\x64\x64\x43\x61rds.proto\x1a\x11RemoveCards.proto\x1a\x13SelectOnStage.proto\x1a\x0e\x44iceRoll.proto\x1a\x10\x44iceReroll.proto\x1a\nPass.proto\x1a\rCharDie.proto\x1a\x11SkillResult.proto\x1a\x0e\x43ostDice.proto\x1a\rAddDice.proto\x1a\x0eMoveCard.proto\x1a\x0eUseSkill.proto\x1a\rNewCard.proto\x1a\x16UpdateController.proto\x1a\x0fModifyAdd.proto\x1a\x12ModifyRemove.proto\x1a\x11UseSkillEnd.proto\x1a\x14\x44uelDataChange.proto\x1a\x13\x43lientPerform.proto\x1a\x0eGameOver.proto\x1a\rOpTimer.proto\x1a\x17WaitingListChange.proto\x1a\x10\x43\x61rdUpdate.proto\x1a\x1bSelectOnStageByEffect.proto\x1a\x10\x43ostRevise.proto\x1a\x13PhaseContinue.proto\x1a\x16PveIntentionInfo.proto\x1a\x18PveIntentionChange.proto\x1a\x17SkillLimitsChange.proto\x1a\x19NoDamageSkillResult.proto\x1a\x13ReactionBegin.proto\x1a\x11ReactionEnd.proto\"\xdb\n\n\nGCGMessage\x12$\n\x0ctoken_change\x18\n \x01(\x0b\x32\x0c.TokenChangeH\x00\x12$\n\x0cphase_change\x18\x0f \x01(\x0b\x32\x0c.PhaseChangeH\x00\x12\x1e\n\tadd_cards\x18\x0b \x01(\x0b\x32\t.AddCardsH\x00\x12$\n\x0cremove_cards\x18\x07 \x01(\x0b\x32\x0c.RemoveCardsH\x00\x12)\n\x0fselect_on_stage\x18\t \x01(\x0b\x32\x0e.SelectOnStageH\x00\x12\x1e\n\tdice_roll\x18\x03 \x01(\x0b\x32\t.DiceRollH\x00\x12\"\n\x0b\x64ice_reroll\x18\x0c \x01(\x0b\x32\x0b.DiceRerollH\x00\x12\x15\n\x04pass\x18\x05 \x01(\x0b\x32\x05.PassH\x00\x12\x1c\n\x08\x63har_die\x18\x06 \x01(\x0b\x32\x08.CharDieH\x00\x12$\n\x0cskill_result\x18\x01 \x01(\x0b\x32\x0c.SkillResultH\x00\x12\x1e\n\tcost_dice\x18\x04 \x01(\x0b\x32\t.CostDiceH\x00\x12\x1c\n\x08\x61\x64\x64_dice\x18\r \x01(\x0b\x32\x08.AddDiceH\x00\x12\x1e\n\tmove_card\x18\x0e \x01(\x0b\x32\t.MoveCardH\x00\x12\x1e\n\tuse_skill\x18\x02 \x01(\x0b\x32\t.UseSkillH\x00\x12\x1d\n\x08new_card\x18\xfa\x0c \x01(\x0b\x32\x08.NewCardH\x00\x12/\n\x11update_controller\x18\xcc\x01 \x01(\x0b\x32\x11.UpdateControllerH\x00\x12!\n\nmodify_add\x18\xe9\x07 \x01(\x0b\x32\n.ModifyAddH\x00\x12\'\n\rmodify_remove\x18\xa7\x0b \x01(\x0b\x32\r.ModifyRemoveH\x00\x12&\n\ruse_skill_end\x18\xf3\r \x01(\x0b\x32\x0c.UseSkillEndH\x00\x12,\n\x10\x64uel_data_change\x18\xce\x08 \x01(\x0b\x32\x0f.DuelDataChangeH\x00\x12)\n\x0e\x63lient_perform\x18\xc9\t \x01(\x0b\x32\x0e.ClientPerformH\x00\x12\x1f\n\tgame_over\x18\x80\x05 \x01(\x0b\x32\t.GameOverH\x00\x12\x1d\n\x08op_timer\x18\x8a\x06 \x01(\x0b\x32\x08.OpTimerH\x00\x12\x32\n\x13waiting_list_change\x18\x85\x04 \x01(\x0b\x32\x12.WaitingListChangeH\x00\x12#\n\x0b\x63\x61rd_update\x18\x84\n \x01(\x0b\x32\x0b.CardUpdateH\x00\x12<\n\x19select_on_stage_by_effect\x18\x9e\x04 \x01(\x0b\x32\x16.SelectOnStageByEffectH\x00\x12#\n\x0b\x63ost_revise\x18\x96\x05 \x01(\x0b\x32\x0b.CostReviseH\x00\x12)\n\x0ephase_continue\x18\xd8\x02 \x01(\x0b\x32\x0e.PhaseContinueH\x00\x12\x30\n\x12pve_intention_info\x18\xcf\x07 \x01(\x0b\x32\x11.PveIntentionInfoH\x00\x12\x34\n\x14pve_intention_change\x18\xcf\x05 \x01(\x0b\x32\x13.PveIntentionChangeH\x00\x12\x32\n\x13skill_limits_change\x18\xd5\x04 \x01(\x0b\x32\x12.SkillLimitsChangeH\x00\x12\x37\n\x16no_damage_skill_result\x18\xcb\x0b \x01(\x0b\x32\x14.NoDamageSkillResultH\x00\x12)\n\x0ereaction_begin\x18\xaa\x01 \x01(\x0b\x32\x0e.ReactionBeginH\x00\x12$\n\x0creaction_end\x18: \x01(\x0b\x32\x0c.ReactionEndH\x00\x42\t\n\x07messageB\x1b\n\x19\x65mu.grasscutter.net.protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'GCGMessage_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031emu.grasscutter.net.proto'
  _globals['_GCGMESSAGE']._serialized_start=680
  _globals['_GCGMESSAGE']._serialized_end=2051
# @@protoc_insertion_point(module_scope)
