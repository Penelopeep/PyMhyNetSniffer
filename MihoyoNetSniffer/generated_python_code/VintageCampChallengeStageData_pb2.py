# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: VintageCampChallengeStageData.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import VintageCampChallengeLevelData_pb2 as VintageCampChallengeLevelData__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#VintageCampChallengeStageData.proto\x1a#VintageCampChallengeLevelData.proto\"\x9b\x02\n\x1dVintageCampChallengeStageData\x12\x46\n\x0c\x63\x61mpLevelMap\x18\x01 \x03(\x0b\x32\x30.VintageCampChallengeStageData.CampLevelMapEntry\x12\x0e\n\x06isOpen\x18\r \x01(\x08\x12\x18\n\x10maxFinishedLevel\x18\x07 \x01(\r\x12\x10\n\x08isFinish\x18\x04 \x01(\x08\x12\x0f\n\x07stageId\x18\t \x01(\r\x12\x10\n\x08openTime\x18\n \x01(\r\x1aS\n\x11\x43\x61mpLevelMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12-\n\x05value\x18\x02 \x01(\x0b\x32\x1e.VintageCampChallengeLevelData:\x02\x38\x01\x42\x1b\n\x19\x65mu.grasscutter.net.protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'VintageCampChallengeStageData_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\031emu.grasscutter.net.proto'
  _VINTAGECAMPCHALLENGESTAGEDATA_CAMPLEVELMAPENTRY._options = None
  _VINTAGECAMPCHALLENGESTAGEDATA_CAMPLEVELMAPENTRY._serialized_options = b'8\001'
  _globals['_VINTAGECAMPCHALLENGESTAGEDATA']._serialized_start=77
  _globals['_VINTAGECAMPCHALLENGESTAGEDATA']._serialized_end=360
  _globals['_VINTAGECAMPCHALLENGESTAGEDATA_CAMPLEVELMAPENTRY']._serialized_start=277
  _globals['_VINTAGECAMPCHALLENGESTAGEDATA_CAMPLEVELMAPENTRY']._serialized_end=360
# @@protoc_insertion_point(module_scope)
